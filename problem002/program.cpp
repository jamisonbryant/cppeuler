/**
 * Problem 2: Even Fibonacci Numbers 
 *
 * Problem description: Each new term in the Fibonacci sequence is generated by
 * adding the previous two terms. By starting with 1 and 2, the first 10 terms
 * will be 1, 2, 3, 5, 8, 13, 21, 35, 55, 89, and so on. By considering the
 * terms in the Fibonacci sequence whose values do not exceed four million, find
 * the sum of the even-valued terms.
 */

#include <iostream>
using namespace std;

int fibonacci(int n) {
  if (n > 2) {
    return fibonacci(n - 1) + fibonacci(n - 2);
  } else {
    return n;
  }
}

int main() {
  // Declare variables
  int num = 0;   // Holds value of current term
  int sum = 0;   // Holds sum of identified terms
  int idx = 0;   // Holds index number of term

  do {
    // Get current term value
    num = fibonacci(++idx);

    // Check if term is even
    if (num % 2 == 0) {
      // Add term to sum
      sum += num;
    }
  } while (num < 4000000);

  // Display answer
  cout << "Answer: " << sum << endl;
}

